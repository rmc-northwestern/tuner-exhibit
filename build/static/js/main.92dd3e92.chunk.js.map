{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","step","_this2","react_default","a","createElement","className","onClick","setState","style","transform","margin","iframe","url","width","height","id","allow","display","position","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.92dd3e92.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Iframe from 'react-iframe'\n\n\nclass App extends Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      step: 0\n    }\n  }\n  render(){\n    if (this.state.step === 0) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>\n              STRING FREQUENCY\n            </h1>\n            <button onClick={()=>this.setState({step:1})}>begin</button>\n          </header>\n        </div>\n      );\n    }\n\n    if (this.state.step === 1) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>\n              INTRODUCTION\n            </h1>\n            <p><i>Let’s begin by figuring out what “<b>frequency</b>” means in music:</i></p>\n            <p>Each <b>note</b> on the musical scale is produced when an object vibrates at a particular speed.</p>\n            <p>Faster vibrations create high notes, and slower vibrations create low notes.</p>\n            <button onClick={()=>this.setState({step:2})}>next</button>\n          </header>\n        </div>\n      );\n    }\n\n    if (this.state.step === 2) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>\n              STEP 1\n            </h1>\n            <p><i>Next, let’s figure out what note our string makes all by itself.</i></p>\n            <p><b>Pluck the string and see what the tuner reads!</b></p>\n            <div style={{transform:\"scale(0.6)\", margin:\"-70px\"}}>\n              <Iframe url=\"https://www.alexdemartos.es/wtuner/\"\n                width=\"550px\"\n                height=\"450px\"\n                id=\"myId\"\n                className=\"myClassname\"\n                allow=\"microphone\"\n                display=\"initial\"\n                position=\"relative\"/>\n              </div>\n            <button onClick={()=>this.setState({step:3})}>next</button>\n          </header>\n        </div>\n      );\n    }\n\n    if (this.state.step === 3) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>\n              STEP 2\n            </h1>\n            <p><i>Next, what happens if we only vibrate half of the string?</i></p>\n            <p><b>Place the fret in the middle of the string and pluck again!</b></p>\n            <div style={{transform:\"scale(0.6)\", margin:\"-70px\"}}>\n              <Iframe url=\"https://www.alexdemartos.es/wtuner/\"\n                width=\"550px\"\n                height=\"450px\"\n                id=\"myId\"\n                className=\"myClassname\"\n                allow=\"microphone\"\n                display=\"initial\"\n                position=\"relative\"/>\n              </div>\n            <button onClick={()=>this.setState({step:4})}>next</button>\n          </header>\n        </div>\n      );\n    }\n\n    if (this.state.step === 4) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>\n              STEP 3\n            </h1>\n            <p><i>Very cool! When the length of the string was cut in half, the frequency doubled!</i></p>\n            <p><b>See what other notes you can make using the fret!</b></p>\n            <div style={{transform:\"scale(0.6)\", margin:\"-70px\"}}>\n              <Iframe url=\"https://www.alexdemartos.es/wtuner/\"\n                width=\"550px\"\n                height=\"450px\"\n                id=\"myId\"\n                className=\"myClassname\"\n                allow=\"microphone\"\n                display=\"initial\"\n                position=\"relative\"/>\n              </div>\n            <button onClick={()=>this.setState({step:5})}>next</button>\n          </header>\n        </div>\n      );\n    }\n\n    if (this.state.step === 5) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>\n            WHAT WE LEARNED\n            </h1>\n            <p><i>- When objects vibrate, they create sounds at specific frequencies</i></p>\n            <p><i>- Each note in the musical scale relates to a specific frequency</i></p>\n            <p><i>- Changing the size and shape of an object changes the frequncy at which it vibrates</i></p>\n            <p><i>- We can create different musical notes by altering the length of a taut string</i></p>\n            <button onClick={()=>this.setState({step:0})}>finish</button>\n          </header>\n        </div>\n      );\n    }\n    \n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}