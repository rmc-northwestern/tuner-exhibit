{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIframe\n */\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\n\nvar ReactClass = require(\"./ReactClass\");\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar iframe = ReactElement.createFactory('iframe');\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <iframe> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <iframe> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\n\nvar ReactDOMIframe = ReactClass.createClass({\n  displayName: 'ReactDOMIframe',\n  tagName: 'IFRAME',\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n  render: function () {\n    return iframe(this.props);\n  },\n  componentDidMount: function () {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');\n  }\n});\nmodule.exports = ReactDOMIframe;","map":null,"metadata":{},"sourceType":"script"}