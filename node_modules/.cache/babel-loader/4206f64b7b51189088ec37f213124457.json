{"ast":null,"code":"var __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar events_1 = require('events');\n\nvar dispatcher_1 = require('./dispatcher');\n\nvar constants_1 = require('./constants');\n\nvar Store = function (_super) {\n  __extends(Store, _super);\n\n  function Store() {\n    _super.call(this);\n\n    this.frame = null;\n    this.forwardable = false;\n    this.backable = false;\n  }\n\n  Store.prototype.getCurrentURL = function () {\n    if (!this.frame) {\n      return '';\n    }\n\n    return this.frame.getUrl();\n  };\n\n  return Store;\n}(events_1.EventEmitter);\n\nvar store = new Store();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = store;\n\nfunction updateForwardable(new_value) {\n  if (new_value !== store.forwardable) {\n    store.forwardable = new_value;\n    store.emit('update-forwardable', new_value);\n  }\n}\n\nfunction updateBackable(new_value) {\n  if (new_value !== store.backable) {\n    store.backable = new_value;\n    store.emit('update-backable', new_value);\n  }\n}\n\nfunction goForward() {\n  if (store.frame && store.frame.canGoForward()) {\n    store.frame.goForward();\n  }\n}\n\nfunction goBack() {\n  if (store.frame && store.frame.canGoBack()) {\n    store.frame.goBack();\n  }\n}\n\nfunction createFrame(frame) {\n  if (store.frame) {\n    console.error('Error: Only one embedded browser exists!', store.frame);\n  }\n\n  store.frame = frame;\n  store.frame.addEventListener('did-finish-load', function () {\n    store.emit('update-title', store.frame.getTitle());\n    store.emit('update-url', store.frame.getUrl());\n    updateForwardable(store.frame.canGoForward());\n    updateBackable(store.frame.canGoBack());\n  });\n}\n\nfunction openURL(url) {\n  if (!url) {\n    return;\n  }\n\n  store.frame.src = url;\n}\n\nstore.dispatch_token = dispatcher_1.default.register(function (action) {\n  switch (action.type) {\n    case constants_1.ActionKind.GoForward:\n      goForward();\n      break;\n\n    case constants_1.ActionKind.GoBack:\n      goBack();\n      break;\n\n    case constants_1.ActionKind.CreateInnerFrame:\n      createFrame(action.inner_frame);\n      break;\n\n    case constants_1.ActionKind.OpenURL:\n      openURL(action.url);\n      break;\n\n    default:\n      break;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}