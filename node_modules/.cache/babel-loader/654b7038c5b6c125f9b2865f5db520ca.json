{"ast":null,"code":"var exec = require('child_process').exec,\n    path = require('path');\n/**\r\n * open a file or uri using the default application for the file type.\r\n *\r\n * @return {ChildProcess} - the child process object.\r\n * @param {string} target - the file/uri to open.\r\n * @param {string} appName - (optional) the application to be used to open the\r\n *      file (for example, \"chrome\", \"firefox\")\r\n * @param {function(Error)} callback - called with null on success, or\r\n *      an error object that contains a property 'code' with the exit\r\n *      code of the process.\r\n */\n\n\nmodule.exports = open;\n\nfunction open(target, appName, callback) {\n  var opener;\n\n  if (typeof appName === 'function') {\n    callback = appName;\n    appName = null;\n  }\n\n  switch (process.platform) {\n    case 'darwin':\n      if (appName) {\n        opener = 'open -a \"' + escape(appName) + '\"';\n      } else {\n        opener = 'open';\n      }\n\n      break;\n\n    case 'win32':\n      // if the first parameter to start is quoted, it uses that as the title\n      // so we pass a blank title so we can quote the file we are opening\n      if (appName) {\n        opener = 'start \"\" \"' + escape(appName) + '\"';\n      } else {\n        opener = 'start \"\"';\n      }\n\n      break;\n\n    default:\n      if (appName) {\n        opener = escape(appName);\n      } else {\n        // use Portlands xdg-open everywhere else\n        opener = path.join(__dirname, '../vendor/xdg-open');\n      }\n\n      break;\n  }\n\n  if (process.env.SUDO_USER) {\n    opener = 'sudo -u ' + process.env.SUDO_USER + ' ' + opener;\n  }\n\n  return exec(opener + ' \"' + escape(target) + '\"', callback);\n}\n\nfunction escape(s) {\n  return s.replace(/\"/g, '\\\\\\\"');\n}","map":null,"metadata":{},"sourceType":"script"}