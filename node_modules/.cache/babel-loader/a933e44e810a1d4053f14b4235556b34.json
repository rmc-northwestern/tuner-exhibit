{"ast":null,"code":"var __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar React = require('react');\n\nvar Action = require('./actions');\n\nvar store_1 = require('./store');\n\nvar BrowserBody = function (_super) {\n  __extends(BrowserBody, _super);\n\n  function BrowserBody(props) {\n    _super.call(this, props);\n  }\n\n  BrowserBody.prototype.componentDidMount = function () {\n    var webview = document.createElement('webview');\n    webview.style.height = '100%';\n    webview.style.width = '100%';\n    var wrapper = React.findDOMNode(this.refs['wrapper']);\n    wrapper.appendChild(webview);\n\n    wrapper.open = function (url) {\n      Action.openURL(url);\n    };\n\n    if (this.props.useragent) {\n      webview.useragent = this.props.useragent;\n    }\n\n    if (this.props.httpreferrer) {\n      webview.httpreferrer = this.props.httpreferrer;\n    }\n\n    Action.createInnerFrame(webview);\n  };\n\n  BrowserBody.prototype.render = function () {\n    return React.createElement(\"div\", {\n      \"className\": this.props.className,\n      \"ref\": \"wrapper\"\n    });\n  };\n\n  BrowserBody.defaultProps = {\n    className: \"\"\n  };\n  return BrowserBody;\n}(React.Component);\n\nexports.BrowserBody = BrowserBody;\n\nvar ExternalButton = function (_super) {\n  __extends(ExternalButton, _super);\n\n  function ExternalButton(props) {\n    _super.call(this, props);\n  }\n\n  ExternalButton.prototype.open = function () {\n    if (!this.opener) {\n      var shell = global.require('shell');\n\n      if (shell) {\n        this.opener = shell.openExternal;\n      } else {\n        this.opener = require('open');\n      }\n    }\n\n    this.opener(store_1.default.getCurrentURL());\n  };\n\n  ExternalButton.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(\"div\", {\n      \"className\": this.props.className,\n      \"onClick\": function () {\n        return _this.open();\n      }\n    }, this.props.children);\n  };\n\n  ExternalButton.defaultProps = {\n    className: \"\"\n  };\n  return ExternalButton;\n}(React.Component);\n\nexports.ExternalButton = ExternalButton;\n\nvar CloseButton = function (_super) {\n  __extends(CloseButton, _super);\n\n  function CloseButton(props) {\n    _super.call(this, props);\n  }\n\n  CloseButton.prototype.render = function () {\n    return React.createElement(\"div\", {\n      \"className\": this.props.className,\n      \"onClick\": this.props.onClick\n    }, this.props.children);\n  };\n\n  CloseButton.defaultProps = {\n    className: \"\"\n  };\n  return CloseButton;\n}(React.Component);\n\nexports.CloseButton = CloseButton;\n\nvar PageTitle = function (_super) {\n  __extends(PageTitle, _super);\n\n  function PageTitle(props) {\n    _super.call(this, props);\n  }\n\n  PageTitle.prototype.componentDidMount = function () {\n    var _this = this;\n\n    this.title_listener = function (title) {\n      var node = React.findDOMNode(_this.refs['title']);\n      node.innerText = title;\n    };\n\n    store_1.default.on('update-title', this.title_listener);\n  };\n\n  PageTitle.prototype.componentWillUnmount = function () {\n    if (this.title_listener) {\n      store_1.default.removeListener('update-title', this.title_listener);\n    }\n  };\n\n  PageTitle.prototype.render = function () {\n    return React.createElement(\"div\", {\n      \"className\": this.props.className,\n      \"ref\": \"title\"\n    });\n  };\n\n  PageTitle.defaultProps = {\n    className: \"\"\n  };\n  return PageTitle;\n}(React.Component);\n\nexports.PageTitle = PageTitle;\n\nvar ForwardButton = function (_super) {\n  __extends(ForwardButton, _super);\n\n  function ForwardButton(props) {\n    _super.call(this, props);\n\n    this.state = {\n      enabled: false\n    };\n  }\n\n  ForwardButton.prototype.componentDidMount = function () {\n    var _this = this;\n\n    this.forwardable_listener = function (forwardable) {\n      return _this.setState({\n        enabled: forwardable\n      });\n    };\n\n    store_1.default.on('update-forwardable', this.forwardable_listener);\n  };\n\n  ForwardButton.prototype.componentWillUnmount = function () {\n    if (this.forwardable_listener) {\n      store_1.default.removeListener('update-forwardable', this.forwardable_listener);\n    }\n  };\n\n  ForwardButton.prototype.getClassName = function () {\n    if (this.state.enabled) {\n      return this.props.className;\n    } else {\n      return this.props.className + \" disabled\";\n    }\n  };\n\n  ForwardButton.prototype.render = function () {\n    return React.createElement(\"div\", {\n      \"className\": this.getClassName(),\n      \"onClick\": Action.goForward\n    }, this.props.children);\n  };\n\n  ForwardButton.defaultProps = {\n    className: \"\"\n  };\n  return ForwardButton;\n}(React.Component);\n\nexports.ForwardButton = ForwardButton;\n\nvar BackButton = function (_super) {\n  __extends(BackButton, _super);\n\n  function BackButton(props) {\n    _super.call(this, props);\n\n    this.state = {\n      enabled: false\n    };\n  }\n\n  BackButton.prototype.componentDidMount = function () {\n    var _this = this;\n\n    this.backable_listener = function (backable) {\n      return _this.setState({\n        enabled: backable\n      });\n    };\n\n    store_1.default.on('update-backable', this.backable_listener);\n  };\n\n  BackButton.prototype.componentWillUnmount = function () {\n    if (this.backable_listener) {\n      store_1.default.removeListener('update-backable', this.backable_listener);\n    }\n  };\n\n  BackButton.prototype.getClassName = function () {\n    if (this.state.enabled) {\n      return this.props.className;\n    } else {\n      return this.props.className + \" disabled\";\n    }\n  };\n\n  BackButton.prototype.render = function () {\n    return React.createElement(\"div\", {\n      \"className\": this.getClassName(),\n      \"onClick\": Action.goBack\n    }, this.props.children);\n  };\n\n  BackButton.defaultProps = {\n    className: \"\"\n  };\n  return BackButton;\n}(React.Component);\n\nexports.BackButton = BackButton;\n\nvar EmbeddedBrowser = function (_super) {\n  __extends(EmbeddedBrowser, _super);\n\n  function EmbeddedBrowser(props) {\n    _super.call(this, props);\n  }\n\n  EmbeddedBrowser.prototype.close = function () {\n    var root = React.findDOMNode(this.refs['root']);\n    root.className = this.props.className + \" anime-slideout\";\n  };\n\n  EmbeddedBrowser.prototype.componentDidMount = function () {\n    var _this = this;\n\n    var root = React.findDOMNode(this.refs['root']);\n\n    root.open = function (url) {\n      React.findDOMNode(_this.refs['body']).open(url);\n    };\n  };\n\n  EmbeddedBrowser.prototype.render = function () {\n    return React.createElement(\"div\", {\n      \"className\": this.props.className,\n      \"ref\": \"root\"\n    }, React.createElement(\"div\", {\n      \"className\": \"title-bar\"\n    }, React.createElement(BackButton, {\n      \"className\": \"page-back\"\n    }, React.createElement(\"i\", {\n      \"className\": \"fa fa-arrow-left\"\n    })), React.createElement(ForwardButton, {\n      \"className\": \"page-forward\"\n    }, React.createElement(\"i\", {\n      \"className\": \"fa fa-arrow-right\"\n    })), React.createElement(PageTitle, {\n      \"className\": \"page-title\"\n    }), React.createElement(ExternalButton, {\n      \"className\": \"page-external\"\n    }, React.createElement(\"i\", {\n      \"className\": \"fa fa-external-link\"\n    })), React.createElement(CloseButton, {\n      \"className\": \"browser-close\",\n      \"onClick\": this.close.bind(this)\n    }, React.createElement(\"i\", {\n      \"className\": \"fa fa-times\"\n    }))), React.createElement(BrowserBody, {\n      \"className\": \"page-body\",\n      \"useragent\": this.props.useragent,\n      \"httpreferrer\": this.props.httpreferrer,\n      \"ref\": \"body\"\n    }));\n  };\n\n  EmbeddedBrowser.defaultProps = {\n    className: \"embedded-browser\"\n  };\n  return EmbeddedBrowser;\n}(React.Component);\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = EmbeddedBrowser;","map":null,"metadata":{},"sourceType":"script"}